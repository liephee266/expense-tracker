// Code generated by ent, DO NOT EDIT.

package ent

import (
	"expense-tracker/ent/expense"
	"expense-tracker/ent/schema"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	expenseFields := schema.Expense{}.Fields()
	_ = expenseFields
	// expenseDescTitle is the schema descriptor for title field.
	expenseDescTitle := expenseFields[0].Descriptor()
	// expense.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	expense.TitleValidator = expenseDescTitle.Validators[0].(func(string) error)
	// expenseDescAmount is the schema descriptor for amount field.
	expenseDescAmount := expenseFields[1].Descriptor()
	// expense.AmountValidator is a validator for the "amount" field. It is called by the builders before save.
	expense.AmountValidator = expenseDescAmount.Validators[0].(func(float64) error)
	// expenseDescDate is the schema descriptor for date field.
	expenseDescDate := expenseFields[2].Descriptor()
	// expense.DefaultDate holds the default value on creation for the date field.
	expense.DefaultDate = expenseDescDate.Default.(func() time.Time)
}
